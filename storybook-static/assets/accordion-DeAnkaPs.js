import{j as t}from"./jsx-runtime-z8MfsBtr.js";import{r as x}from"./index-DvCGLPYa.js";import{u as y}from"./theme-provider-DOvcT7Ga.js";import{c}from"./createLucideIcon-B3piHVE0.js";/**
 * @license lucide-react v0.474.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const N=[["path",{d:"m6 9 6 6 6-6",key:"qrunsl"}]],w=c("ChevronDown",N);/**
 * @license lucide-react v0.474.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const b=[["path",{d:"m18 15-6-6-6 6",key:"153udz"}]],R=c("ChevronUp",b),$=({header:d,children:l,icon:o,isOpen:s,onToggle:n,variant:p="default",headerClassName:m,contentClassName:u})=>{const[a,h]=x.useState(!1),e=y().theme,r=s!==void 0,i=r?s:a,f=()=>{r?n==null||n():h(!a)},v={default:`border-${e}-overlay text-${e}-text`,secondary:`border-${e}-muted text-${e}-subtle`,destructive:`border-${e}-love text-${e}-love`};return t.jsxs("div",{className:`border rounded-lg overflow-hidden ${v[p]}`,children:[t.jsxs("button",{className:`w-full text-left p-4 flex justify-between items-center focus:outline-none focus:ring-2 focus:ring-${e}-pine focus:ring-opacity-50 ${m}`,onClick:f,children:[t.jsx("div",{className:"flex-grow",children:d}),o?t.jsx("div",{className:"flex-shrink-0 ml-2",children:o}):i?t.jsx(R,{className:"w-5 h-5 flex-shrink-0 ml-2"}):t.jsx(w,{className:"w-5 h-5 flex-shrink-0 ml-2"})]}),t.jsx("div",{className:`transition-max-height duration-300 ease-in-out overflow-hidden ${i?"max-h-screen":"max-h-0"} ${u??""}`,children:t.jsx("div",{className:`p-4 bg-${e}-overlay`,children:l})})]})};$.__docgenInfo={description:`Accordion component to display collapsible content sections.

@param {AccordionProps} props - The props for the Accordion component.
@returns {JSX.Element} The rendered Accordion component.`,methods:[],displayName:"Accordion",props:{header:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to be displayed in the accordion header."},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to be displayed inside the accordion when it is expanded."},icon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"An optional icon to be displayed in the accordion header."},isOpen:{required:!1,tsType:{name:"boolean"},description:"A boolean to control the open/close state of the accordion. If provided, the component operates in controlled mode."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"A callback function to be called when the accordion is toggled."},variant:{required:!1,tsType:{name:"union",raw:'"default" | "secondary" | "destructive"',elements:[{name:"literal",value:'"default"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"destructive"'}]},description:'The variant of the accordion, which determines its styling. Default is "default".',defaultValue:{value:'"default"',computed:!1}},headerClassName:{required:!1,tsType:{name:"string"},description:"Additional class names for the header."},contentClassName:{required:!1,tsType:{name:"string"},description:"Additional class names for the content."}}};export{$ as A};
